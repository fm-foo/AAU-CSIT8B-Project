/*map BasicMap {
        background: color { hex: #222222; };
        shape: box {
                height: 10; width: 10;
        };
};

entity Apple {

    create: function() {
        // do nothing
    }

    act: function() {
        // do nothing
    }

    destroy: function() {
        // create new apple?
    }
};*/

entity Player {
    create: function() {
        //this.length = 3;
        1 + (1);
        //newPosition = position + (1, 0);
    }

    act: function() {
        //receive input take action
        string key = GetKeyPress();
        coord position = Map.getPosition(this);
        coord newPosition;
        if (key == "left")
        {
            newPosition = position + (1, 0);
        } else if (key == "up")
        {
            newPosition = position + (0, 1);
        } else if (key == "down") {
            newPosition = position + (0, -1);
        } else if (key == "right") {
            newPosition = position + (-1, 0);
        } else {
            // don't do anything I guess
            newPosition = position;
        }
        Map.move(this, newPosition);
        // handle placing a snakebody where you left
        var body = new SnakeBody(this.length);
        Map.place(body, position);
        // handle collision
        var entities = Map.getAt(newPosition);
        foreach (var Entity in entities)
        {
            if (Entity is Apple)
            {
                Entity.kill();
                this.length = length + 1;
            }
            if (Entity is SnakeBody)
            {
                // you lose
            }
        }
    }

    destroy: function() {
        // game over? maybe don't
        // even do anything
    }

};

entity SnakeBody {
    create: function(int life) {
        this.life = life;
        // how long it should stay alive for
    }

    act: function() {
        this.life = this.life - 1;
        if (this.life <= 0)
        {
            this.kill();
        }
    }

    destroy: function() {

    }
};

game Snake {
    initialize: function() {
        setMap(new BasicMap());
        Player player = new Player();
        Map.place(player, (0, 0));
        Apple apple = new Apple();
        Map.place(apple, (3, 3));
    }
};